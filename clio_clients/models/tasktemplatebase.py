# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field
from clio_clients.models.priority.priority import Priority


class TaskTemplateBase(BaseModel):
    created_at: Optional[str] = Field(
        None,
        description="The time the *TaskTemplate* was created (as a ISO-8601 timestamp)",
    )
    description: Optional[str] = Field(
        None, description="A detailed description of the *TaskTemplate*"
    )
    etag: Optional[str] = Field(None, description="ETag for the *TaskTemplate*")
    id: Optional[int] = Field(
        None, description="Unique identifier for the *TaskTemplate*"
    )
    name: Optional[str] = Field(None, description="The name of the *TaskTemplate*")
    priority: Optional[Priority] = Field(None, description="*TaskTemplate* priority")
    private: Optional[bool] = Field(
        None, description="Whether the *TaskTemplate* is private."
    )
    updated_at: Optional[str] = Field(
        None,
        description="The time the *TaskTemplate* was last updated (as a ISO-8601 timestamp)",
    )
