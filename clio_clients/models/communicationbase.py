# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field
from clio_clients.models.type.type9 import Type9


class CommunicationBase(BaseModel):
    body: Optional[str] = Field(
        None, description="The main content of the *Communication*"
    )
    created_at: Optional[str] = Field(
        None,
        description="The time the *Communication* was created (as a ISO-8601 timestamp)",
    )
    date: Optional[str] = Field(
        None, description="The date of the *Communication* (as a ISO-8601 datestamp)"
    )
    etag: Optional[str] = Field(None, description="ETag for the *Communication*")
    id: Optional[int] = Field(
        None, description="Unique identifier for the *Communication*"
    )
    received_at: Optional[str] = Field(
        None, description="The date-time of the *Communication* (in ISO-8601 format)"
    )
    subject: Optional[str] = Field(
        None, description="The subject line of the *Communication*"
    )
    time_entries_count: Optional[int] = Field(
        None,
        description="The number of time_entries associated with the *Communication*",
    )
    type: Optional[Type9] = Field(None, description="The type of the *Communication*")
    updated_at: Optional[str] = Field(
        None,
        description="The time the *Communication* was last updated (as a ISO-8601 timestamp)",
    )
