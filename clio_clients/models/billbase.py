# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field
from clio_clients.models.availablestatetransitions import AvailableStateTransitions
from clio_clients.models.kind.kind import Kind
from clio_clients.models.state import State
from clio_clients.models.type.type5 import Type5


class BillBase(BaseModel):
    available_state_transitions: Optional[AvailableStateTransitions] = Field(
        None, description="The available *Bill* state transitions."
    )
    balance: Optional[float] = Field(
        None, description="The outstanding balance of the *Bill*"
    )
    can_update: Optional[bool] = Field(
        None,
        description="This value indicates if your *Bill*'s line items and information can be updated.",
    )
    created_at: Optional[str] = Field(
        None, description="The time the *Bill* was created (as a ISO-8601 timestamp)"
    )
    credits_issued: Optional[float] = Field(
        None, description="The total credits issued for the *Bill*"
    )
    discount_services_only: Optional[str] = Field(
        None, description="The selected discount is applied to services only."
    )
    due: Optional[float] = Field(
        None,
        description="The total amount of the *Bill* with interest and less discounts",
    )
    due_at: Optional[str] = Field(
        None, description="The date the *Bill* is due (as a ISO-8601 date)"
    )
    end_at: Optional[str] = Field(
        None, description="The time the billing period ends (as a ISO-8601 date)"
    )
    etag: Optional[str] = Field(None, description="ETag for the *Bill*")
    id: Optional[int] = Field(None, description="Unique identifier for the *Bill*")
    issued_at: Optional[str] = Field(
        None, description="The time the *Bill* was issued (as a ISO-8601 date)"
    )
    kind: Optional[Kind] = Field(None, description="The kind of the *Bill*")
    last_sent_at: Optional[str] = Field(
        None, description="The last time the *Bill* was sent (as a ISO-8601 date)"
    )
    memo: Optional[str] = Field(None, description="A memo for the *Bill*")
    number: Optional[str] = Field(
        None, description="The *Bill* identifier (not necessarily numeric)'"
    )
    paid: Optional[float] = Field(
        None, description="The total amount paid for the *Bill*"
    )
    paid_at: Optional[str] = Field(
        None, description="The date of the last payment on the *Bill*"
    )
    pending: Optional[float] = Field(
        None, description="The amount of pending credit card payments on the *Bill*"
    )
    purchase_order: Optional[str] = Field(
        None, description="The purchase order of the *Bill*"
    )
    secondary_tax_rate: Optional[float] = Field(
        None, description="A secondary tax rate applied to the *Bill*"
    )
    secondary_tax_sum: Optional[float] = Field(
        None, description="Sum of secondary tax for the model"
    )
    secondary_taxable_sub_total: Optional[int] = Field(
        None, description="The subtotal of the bill's secondary tax"
    )
    services_secondary_tax: Optional[float] = Field(
        None,
        description="The total secondary tax of the bill's line items of a service kind",
    )
    services_secondary_taxable_sub_total: Optional[int] = Field(
        None, description="The services portion of the bill's secondary tax"
    )
    services_sub_total: Optional[float] = Field(
        None, description="The sub total of all the bill's line items of a service kind"
    )
    services_tax: Optional[float] = Field(
        None, description="The total tax of the bill's line items of a service kind"
    )
    services_taxable_sub_total: Optional[int] = Field(
        None, description="The services portion of the bill's primary tax"
    )
    shared: Optional[bool] = Field(None, description="Whether the *Bill* is a shared")
    start_at: Optional[str] = Field(
        None, description="The time the billing period starts (as a ISO-8601 date)"
    )
    state: Optional[State] = Field(
        None, description="The billing state the *Bill* is in"
    )
    sub_total: Optional[float] = Field(None, description="Sub total for the *Bill*")
    subject: Optional[str] = Field(None, description="The subject of the *Bill*")
    tax_rate: Optional[float] = Field(None, description="The tax rate to the *Bill*")
    tax_sum: Optional[float] = Field(
        None, description="Sum of primary tax for the model"
    )
    taxable_sub_total: Optional[int] = Field(
        None, description="The total taxable bill amount"
    )
    total: Optional[float] = Field(
        None, description="The total with interest of the *Bill*"
    )
    total_tax: Optional[float] = Field(
        None, description="The total amount of tax for the bill."
    )
    type: Optional[Type5] = Field(None, description="The type of the *Bill*")
    updated_at: Optional[str] = Field(
        None,
        description="The time the *Bill* was last updated (as a ISO-8601 timestamp)",
    )
