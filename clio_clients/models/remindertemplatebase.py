# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field
from clio_clients.models.notificationtype import NotificationType


class ReminderTemplateBase(BaseModel):
    created_at: Optional[str] = Field(
        None,
        description="The time the *ReminderTemplate* was created (as a ISO-8601 timestamp)",
    )
    duration: Optional[int] = Field(
        None, description="The time in minutes to remind user before the subject."
    )
    etag: Optional[str] = Field(None, description="ETag for the *ReminderTemplate*")
    id: Optional[int] = Field(
        None, description="Unique identifier for the *ReminderTemplate*"
    )
    notification_type: Optional[NotificationType] = Field(
        None, description="The type of method to be notified by"
    )
    updated_at: Optional[str] = Field(
        None,
        description="The time the *ReminderTemplate* was last updated (as a ISO-8601 timestamp)",
    )
