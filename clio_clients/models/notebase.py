# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field
from clio_clients.models.type.type22 import Type22


class NoteBase(BaseModel):
    created_at: Optional[str] = Field(
        None, description="The time the *Note* was created (as a ISO-8601 timestamp)"
    )
    date: Optional[str] = Field(
        None, description="The date the *Note* is for (as a ISO-8601 date)"
    )
    detail: Optional[str] = Field(None, description="The body of the *Note*")
    etag: Optional[str] = Field(None, description="ETag for the *Note*")
    id: Optional[int] = Field(None, description="Unique identifier for the *Note*")
    subject: Optional[str] = Field(None, description="The subject of the *Note*")
    time_entries_count: Optional[int] = Field(
        None, description="The number of time_entries associated with the *Note*"
    )
    type: Optional[Type22] = Field(None, description="The type of the *Note*")
    updated_at: Optional[str] = Field(
        None,
        description="The time the *Note* was last updated (as a ISO-8601 timestamp)",
    )
