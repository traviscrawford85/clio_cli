# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field
from clio_clients.models.kind.kind1 import Kind1
from clio_clients.models.type.type17 import Type17


class LineItemBase(BaseModel):
    created_at: Optional[str] = Field(
        None,
        description="The time the *LineItem* was created (as a ISO-8601 timestamp)",
    )
    date: Optional[str] = Field(
        None, description="The *LineItem* date (as a ISO-8601 date)"
    )
    description: Optional[str] = Field(
        None, description="The description for the *LineItem*"
    )
    etag: Optional[str] = Field(None, description="ETag for the *LineItem*")
    group_ordering: Optional[int] = Field(
        None,
        description="The value to specify the ordering of the *LineItem* on a bill",
    )
    id: Optional[int] = Field(None, description="Unique identifier for the *LineItem*")
    kind: Optional[Kind1] = Field(None, description="The kind of *LineItem*")
    note: Optional[str] = Field(None, description="The note attached to the *LineItem*")
    price: Optional[float] = Field(None, description="The price of the *LineItem*")
    quantity: Optional[float] = Field(
        None, description="The amount of hours for the *LineItem*"
    )
    secondary_tax: Optional[float] = Field(
        None, description="The secondary tax amount for the *LineItem*"
    )
    secondary_taxable: Optional[bool] = Field(
        None, description="Whether the *LineItem* is secondary taxable"
    )
    sub_total: Optional[float] = Field(
        None, description="The subtotal amount for the *LineItem*"
    )
    tax: Optional[float] = Field(None, description="The tax amount for the *LineItem*")
    taxable: Optional[bool] = Field(
        None, description="Whether the *LineItem* is taxable"
    )
    total: Optional[float] = Field(
        None, description="The total amount for the *LineItem*"
    )
    type: Optional[Type17] = Field(None, description="The type of the *LineItem*")
    updated_at: Optional[str] = Field(
        None,
        description="The time the *LineItem* was last updated (as a ISO-8601 timestamp)",
    )
