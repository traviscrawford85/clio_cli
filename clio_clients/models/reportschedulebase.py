# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field
from clio_clients.models.frequency import Frequency
from clio_clients.models.status.status1 import Status1


class ReportScheduleBase(BaseModel):
    created_at: Optional[str] = Field(
        None,
        description="The time the *ReportSchedule* was created (as a ISO-8601 timestamp)",
    )
    day_of_month: Optional[int] = Field(
        None,
        description="If the frequency is monthly, which day of the month the Report Schedule is run. 32 is used to represent the last day of the month.",
    )
    days_of_week: Optional[List[int]] = Field(
        None,
        description="If the frequency is weekly, which days of the week the Report Schedule is run. Values are 0 to 6, representing Sunday to Saturday.",
    )
    effective_from: Optional[str] = Field(
        None,
        description="The date the Report Schedule will become enabled (a ISO-8601 date)",
    )
    etag: Optional[str] = Field(None, description="ETag for the *ReportSchedule*")
    every_no_of_months: Optional[int] = Field(
        None,
        description="If the frequency is monthly, how many months between each run of the Report Schedule",
    )
    frequency: Optional[Frequency] = Field(
        None, description="How often the Report Schedule is run"
    )
    id: Optional[int] = Field(
        None, description="Unique identifier for the *ReportSchedule*"
    )
    next_scheduled_date: Optional[str] = Field(
        None, description="The next time the Report Schedule should run"
    )
    report_preset_id: Optional[int] = Field(
        None,
        description="The unique identifier of the Report Preset to use when generating the scheduled report",
    )
    status: Optional[Status1] = Field(
        None, description="The status of the Report Schedule"
    )
    status_updated_at: Optional[str] = Field(
        None, description="When the status of the Report Schedule was last updated"
    )
    time_of_day: Optional[str] = Field(
        None, description="What time the Report Schedule is run"
    )
    time_zone: Optional[str] = Field(
        None,
        description="Used in conjunction with `time_of_day` to determine when the Report Schedule should run",
    )
    updated_at: Optional[str] = Field(
        None,
        description="The time the *ReportSchedule* was last updated (as a ISO-8601 timestamp)",
    )
