# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field
from clio_clients.models.type.type12 import Type12


class DocumentBase(BaseModel):
    content_type: Optional[str] = Field(
        None, description="The uploaded file content type"
    )
    created_at: Optional[str] = Field(
        None,
        description="The time the *Document* was created (as a ISO-8601 timestamp)",
    )
    deleted_at: Optional[str] = Field(
        None,
        description="The time the *Document* was deleted (as a ISO-8601 timestamp)",
    )
    etag: Optional[str] = Field(None, description="ETag for the *Document*")
    filename: Optional[str] = Field(
        None, description="The uploaded file name of the latest document version."
    )
    id: Optional[int] = Field(None, description="Unique identifier for the *Document*")
    locked: Optional[bool] = Field(
        None,
        description="Whether or not the Document is locked. Locked Document cannot be modified",
    )
    name: Optional[str] = Field(None, description="The name of the Document")
    received_at: Optional[str] = Field(
        None,
        description="The time the last document version was received (as an ISO-8601 timestamp)",
    )
    size: Optional[int] = Field(None, description="The file size")
    type: Optional[Type12] = Field(None, description="The type of the *Document*")
    updated_at: Optional[str] = Field(
        None,
        description="The time the *Document* was last updated (as a ISO-8601 timestamp)",
    )
