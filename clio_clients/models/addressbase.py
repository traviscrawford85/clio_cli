# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field
from clio_clients.models.name.name import Name


class AddressBase(BaseModel):
    city: Optional[str] = Field(None, description="City of the *Address*")
    country: Optional[str] = Field(None, description="Country of the *Address*")
    created_at: Optional[str] = Field(
        None, description="The time the *Address* was created (as a ISO-8601 timestamp)"
    )
    etag: Optional[str] = Field(None, description="ETag for the *Address*")
    id: Optional[int] = Field(None, description="Unique identifier for the *Address*")
    name: Optional[Name] = Field(None, description="The name of the *Address*")
    postal_code: Optional[str] = Field(None, description="Postal code of the *Address*")
    primary: Optional[bool] = Field(
        None, description="Whether it is the default for this contact"
    )
    province: Optional[str] = Field(
        None, description="Province or state of the *Address*"
    )
    street: Optional[str] = Field(None, description="Street of the *Address*")
    updated_at: Optional[str] = Field(
        None,
        description="The time the *Address* was last updated (as a ISO-8601 timestamp)",
    )
