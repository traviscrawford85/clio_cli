# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field
from clio_clients.models.type.type24 import Type24


class ParticipantBase(BaseModel):
    created_at: Optional[str] = Field(
        None,
        description="The time the *Participant* was created (as a ISO-8601 timestamp)",
    )
    enabled: Optional[bool] = Field(
        None,
        description="The enabled state of the *Participant* record. Always 'null' if *Participant* type is Contact",
    )
    etag: Optional[str] = Field(None, description="ETag for the *Participant*")
    id: Optional[int] = Field(
        None, description="Unique identifier for the *Participant*"
    )
    identifier: Optional[str] = Field(
        None, description="A string to identify the *Participant*"
    )
    initials: Optional[str] = Field(
        None, description="A  string with the participant initials"
    )
    job_title_name: Optional[str] = Field(
        None,
        description="the job title name of the participant if they are a firm user and have one",
    )
    name: Optional[str] = Field(
        None, description="The name of the *Participant* record"
    )
    secondary_identifier: Optional[str] = Field(
        None, description="A secondary string to identify the *Participant*"
    )
    type: Optional[Type24] = Field(
        None,
        description="The type of the Participant. Person and Company are subtypes of Contact",
    )
    updated_at: Optional[str] = Field(
        None,
        description="The time the *Participant* was last updated (as a ISO-8601 timestamp)",
    )
