# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field
from clio_clients.models.type.type4 import Type4


class BankAccountBase(BaseModel):
    account_number: Optional[str] = Field(
        None, description="The account number for *BankAccount*"
    )
    balance: Optional[float] = Field(
        None, description="The current balance of the *BankAccount*"
    )
    bank_transactions_count: Optional[int] = Field(
        None, description="The number of bank transactions associated with the account."
    )
    clio_payment_page_link: Optional[str] = Field(
        None,
        description="Link to Single Payment Page which allows to transfer funds without logging in.",
    )
    clio_payment_page_qr_code: Optional[str] = Field(
        None,
        description="A QR code that links to a Single Payment Page which allows to transfer funds without logging in.",
    )
    clio_payments_enabled: Optional[bool] = Field(
        None, description="Whether the bank account is connected to Clio Payments"
    )
    controlled_account: Optional[bool] = Field(
        None, description="Whether is a controlled account"
    )
    created_at: Optional[str] = Field(
        None,
        description="The time the *BankAccount* was created (as a ISO-8601 timestamp)",
    )
    currency: Optional[str] = Field(
        None, description="The currency type of the *BankAccount*"
    )
    default_account: Optional[bool] = Field(
        None, description="Whether it is the default account"
    )
    domicile_branch: Optional[str] = Field(
        None, description="The name of the branch where the account was opened"
    )
    etag: Optional[str] = Field(None, description="ETag for the *BankAccount*")
    general_ledger_number: Optional[str] = Field(
        None, description="General ledger number"
    )
    holder: Optional[str] = Field(
        None,
        description="The name of the person or business that owns the *BankAccount*",
    )
    id: Optional[int] = Field(
        None, description="Unique identifier for the *BankAccount*"
    )
    institution: Optional[str] = Field(
        None,
        description="The financial institution where the *BankAccount* is registered",
    )
    name: Optional[str] = Field(None, description="The name of the *BankAccount*")
    swift: Optional[str] = Field(
        None, description="A unique identification code for the financial institution"
    )
    transit_number: Optional[str] = Field(
        None, description="Transit number for the bank account branch"
    )
    type: Optional[Type4] = Field(None, description="The type of the *BankAccount*")
    updated_at: Optional[str] = Field(
        None,
        description="The time the *BankAccount* was last updated (as a ISO-8601 timestamp)",
    )
