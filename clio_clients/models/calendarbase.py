# generated by datamodel-codegen:
#   filename:  openapi_sdk.yaml

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field
from clio_clients.models.color.color2 import Color2
from clio_clients.models.lightcolor.lightcolor import LightColor
from clio_clients.models.permission.permission import Permission
from clio_clients.models.source.source import Source
from clio_clients.models.type.type6 import Type6


class CalendarBase(BaseModel):
    color: Optional[Color2] = Field(None, description="Color")
    court_rules_default_calendar: Optional[bool] = Field(
        None,
        description="Whether the calendar is default court rules calendar for current user",
    )
    created_at: Optional[str] = Field(
        None,
        description="The time the *Calendar* was created (as a ISO-8601 timestamp)",
    )
    etag: Optional[str] = Field(None, description="ETag for the *Calendar*")
    id: Optional[int] = Field(None, description="Unique identifier for the *Calendar*")
    light_color: Optional[LightColor] = Field(
        None, description="Accent color to complement the main calendar color."
    )
    name: Optional[str] = Field(None, description="The name of the *Calendar*")
    permission: Optional[Permission] = Field(
        None, description="The user's permission to the *Calendar*"
    )
    source: Optional[Source] = Field(
        None,
        description="The source that visible applies to, by default the Clio Web UI (Expects 'mobile' or 'web').",
    )
    type: Optional[Type6] = Field(None, description="The type of the *Calendar*")
    updated_at: Optional[str] = Field(
        None,
        description="The time the *Calendar* was last updated (as a ISO-8601 timestamp)",
    )
    visible: Optional[bool] = Field(
        None,
        description="Whether the *Calendar* will be shown by default in the Clio Web UI (assuming no source is provided).",
    )
