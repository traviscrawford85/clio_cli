name: Clio Model Custodian

on:
  push:
    paths:
      - "clio_clients/models/**"
  pull_request:
    paths:
      - "clio_clients/models/**"
  schedule:
    - cron: "0 4 * * *" # Daily at 4am UTC

jobs:
  validate-models:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
          pip install black flake8 mypy pydantic

      - name: Run type checking
        run: |
          source .venv/bin/activate
          mypy clio_clients/models --explicit-package-bases --no-error-summary

      - name: Run linting
        run: |
          source .venv/bin/activate
          flake8 clio_clients/models

      - name: Run formatting check
        run: |
          source .venv/bin/activate
          black --check clio_clients/models

      - name: Validate Pydantic Models
        run: |
          source .venv/bin/activate
          python manage_models.py validate

      - name: Generate Model Audit Report
        run: |
          source .venv/bin/activate
          python manage_models.py report > model_audit_report.md

      - name: Upload Model Report
        uses: actions/upload-artifact@v3
        with:
          name: model-audit-report
          path: model_audit_report.md

  auto-fix-imports:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.event.head_commit.message, '[fix-imports]')
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
          pip install black flake8 mypy pydantic pyyaml

      - name: Fix Model Imports
        run: |
          source .venv/bin/activate
          python manage_models.py fix-imports

      - name: Commit fixes if any
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git diff --staged --quiet || git commit -m "ðŸ”§ Auto-fix model imports [skip ci]"
          git push

  suggest-refactors:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
          pip install pyyaml

      - name: Generate Model Analysis
        run: |
          source .venv/bin/activate
          python manage_models.py report > model_analysis.md
          echo "## Model Analysis Results" >> $GITHUB_STEP_SUMMARY
          cat model_analysis.md >> $GITHUB_STEP_SUMMARY
